<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">
    <task:executor id="myExecutor" pool-size="5"/>
    <task:annotation-driven executor="myExecutor"/>
    <bean class="com.aebiz.baseframework.view.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <!-- @ResponseBody 输出纯文本 -->
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html;charset=UTF-8</value>
                            <value>text/xml;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
                <!-- @ResponseBody 输出json-->
                <bean class="org.nutz.integration.spring.NutzJsonMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/json;charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
        <property name="prefixReturnValueHandlers">
            <list>
                <!-- @Json 输出json-->
                <bean class="com.aebiz.baseframework.view.annotation.SJsonReturnHandler"/>
                <!-- @SFlie 输出文件-->
                <bean class="com.aebiz.baseframework.view.annotation.SFileReturnHandler"/>
            </list>
        </property>
        <property name="prefixArgumentResolver">
            <list>
                <!-- bootstrap DataTables -->
                <bean class="com.aebiz.baseframework.page.datatable.DataTableResolver"/>
            </list>
        </property>
    </bean>
    <mvc:annotation-driven/>
    <!-- 启用spring mvc 注解 -->
    <context:annotation-config/>
    <!-- 设置使用注解的类所在的jar包 -->
    <context:component-scan base-package="com.aebiz"/>
    <!-- AOP切面配置,实现自定义注解 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!-- 导入其他配置文件 -->
    <import resource="classpath*:/ioc/db.xml"/>
    <!-- 必须启用 -->
    <import resource="classpath*:/ioc/quartz.xml"/>
    <!-- 必须启用 -->
    <import resource="classpath*:/ioc/redis.xml"/>
    <!-- 必须启用 -->
    <import resource="classpath*:/ioc/cache.xml"/>
    <!-- 必须启用 -->
    <import resource="classpath*:/ioc/shiro.xml"/>
    <!-- 集群部署时启用 -->
    <!--<import resource="classpath*:/ioc/rabbit.xml"/>-->
    <!-- 需要邮件服务时启用 -->
    <import resource="classpath*:/ioc/mail.xml"/>

    <!-- 初始化SpringBeans工具类applicationContext及其他内容-->
    <bean class="com.aebiz.app.web.commons.listener.ApplicationInitRunner"/>

    <!-- 加载所有配置文件-->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:custom/*.properties</value>
            </list>
        </property>
    </bean>

    <bean name="beetlConfig" class="org.beetl.ext.spring.BeetlGroupUtilConfiguration" init-method="init">
        <property name="configFileResource" value="classpath:custom/beetl.properties"/>
    </bean>

    <bean name="nutFilePool" class="org.nutz.filepool.NutFilePool">
        <constructor-arg type="java.lang.String" value="~/aebiz/tmp" />
        <constructor-arg type="long" value="500" />
    </bean>

    <!-- Beetl视图解析器 -->
    <bean name="beetlViewResolver" class="org.beetl.ext.spring.BeetlSpringViewResolver">
        <!-- 多视图解析器，需要设置viewNames和order -->
        <property name="viewNames">
            <list>
                <value>pages/**</value>
            </list>
        </property>
        <property name="suffix" value=".html"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="order" value="0"/>
        <!-- 多GroupTemplate，需要指定使用的bean -->
        <property name="config" ref="beetlConfig"/>
    </bean>

    <!-- JSP视图解析器 -->
    <bean name="JSPViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 注意JSP的这个视图解析器order必须在最后 -->
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
        <property name="order" value="254"/>
        <property name="prefix" value="/WEB-INF/"/>
        <property name="suffix" value=".jsp"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
    </bean>

    <!-- 静态资源访问配置 -->
    <mvc:resources mapping="/assets/**" location="/assets/" cache-period="31556926"/>
    <mvc:resources mapping="/upload/**" location="/upload/" cache-period="31556926"/>
    <!-- 支持上传文件 500M -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
          p:defaultEncoding="UTF-8" p:maxUploadSize="500242880000" p:uploadTempDir="upload/temp"/>

    <mvc:view-controller path="/" view-name="redirect:index" />

    <!-- 配置信息加载,后台获取值通过:
    @Autowired
    PropertiesProxy config
    -->
    <bean id="config" class="org.nutz.ioc.impl.PropertiesProxy">
        <constructor-arg type="boolean" value="false"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="paths">
            <list>
                <value>custom</value>
            </list>
        </property>
    </bean>

    <!-- 国际化字符串加载 -->
    <bean class="com.aebiz.baseframework.base.Message">
        <constructor-arg type="java.lang.String" value="locales"/>
    </bean>
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
        <property name="defaultLocale" value="zh_CN"/>
    </bean>

    <!-- 拦截器 -->
    <mvc:interceptors>
        <!-- debug模式打印url执行时间 -->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/assets/**"/>
            <mvc:exclude-mapping path="/upload/**"/>
            <bean class="com.aebiz.app.web.commons.interceptor.LogTimeInterceptor"/>
        </mvc:interceptor>
        <!-- 设置全局变量 -->
        <bean class="com.aebiz.app.web.commons.interceptor.GlobalsInterceptor"/>
        <!-- 国际化字符串切换语言 -->
        <bean class="com.aebiz.app.web.commons.interceptor.LocaleInterceptor">
            <property name="paramName" value="lang"/>
        </bean>
        <!-- Api Token -->
        <mvc:interceptor>
            <mvc:mapping path="/open/api/**"/>
            <mvc:exclude-mapping path="/open/api/token/**"/>
            <bean class="com.aebiz.app.web.commons.interceptor.TokenInterceptor"/>
        </mvc:interceptor>
        <!-- 系统管理后台shiro拦截器,商户/会员/可参考来实现 -->
        <mvc:interceptor>
            <mvc:mapping path="/platform/**"/>
            <mvc:exclude-mapping path="/platform/login/**"/>
            <mvc:exclude-mapping path="//platform/dec/templates/manager/run"/>
            <mvc:exclude-mapping path="//platform/dec/templates/files/getFile"/>
            <mvc:exclude-mapping path="//platform/dec/templates/files/getSkin"/>
            <bean class="com.aebiz.app.web.commons.interceptor.PlatformShiroInterceptor"/>
        </mvc:interceptor>
        <!-- 商家中心后台shiro拦截器 -->
        <mvc:interceptor>
            <mvc:mapping path="/store/**"/>
            <mvc:exclude-mapping path="/store/login/**"/>
            <mvc:exclude-mapping path="/store/join/**"/>  <!-- 加入商家不拦截 -->
            <bean class="com.aebiz.app.web.commons.interceptor.StoreShiroInterceptor"/>
        </mvc:interceptor>
        <!-- 会员中心shiro拦截器 -->
        <mvc:interceptor>
            <mvc:mapping path="/member/**"/>
            <mvc:exclude-mapping path="/member/login/**"/>
            <mvc:exclude-mapping path="/member/register/**"/> <!-- 会员注册功能不拦截 -->
            <mvc:exclude-mapping path="/member/fogetPassword/**"/> <!-- 会员忘记密码功能不拦截 -->
            <bean class="com.aebiz.app.web.commons.interceptor.MemberShiroInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>
